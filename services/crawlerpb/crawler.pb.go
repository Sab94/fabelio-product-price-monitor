// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/crawlerpb/crawler.proto

package crawlerpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProductUrl struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductUrl) Reset()         { *m = ProductUrl{} }
func (m *ProductUrl) String() string { return proto.CompactTextString(m) }
func (*ProductUrl) ProtoMessage()    {}
func (*ProductUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_be9088d54c279543, []int{0}
}

func (m *ProductUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductUrl.Unmarshal(m, b)
}
func (m *ProductUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductUrl.Marshal(b, m, deterministic)
}
func (m *ProductUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductUrl.Merge(m, src)
}
func (m *ProductUrl) XXX_Size() int {
	return xxx_messageInfo_ProductUrl.Size(m)
}
func (m *ProductUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductUrl.DiscardUnknown(m)
}

var xxx_messageInfo_ProductUrl proto.InternalMessageInfo

func (m *ProductUrl) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ProductInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image                string   `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Price                string   `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductInfo) Reset()         { *m = ProductInfo{} }
func (m *ProductInfo) String() string { return proto.CompactTextString(m) }
func (*ProductInfo) ProtoMessage()    {}
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_be9088d54c279543, []int{1}
}

func (m *ProductInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductInfo.Unmarshal(m, b)
}
func (m *ProductInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductInfo.Marshal(b, m, deterministic)
}
func (m *ProductInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductInfo.Merge(m, src)
}
func (m *ProductInfo) XXX_Size() int {
	return xxx_messageInfo_ProductInfo.Size(m)
}
func (m *ProductInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProductInfo proto.InternalMessageInfo

func (m *ProductInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductInfo) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ProductInfo) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *ProductInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*ProductUrl)(nil), "crawler.ProductUrl")
	proto.RegisterType((*ProductInfo)(nil), "crawler.ProductInfo")
}

func init() { proto.RegisterFile("services/crawlerpb/crawler.proto", fileDescriptor_be9088d54c279543) }

var fileDescriptor_be9088d54c279543 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x28, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x2d, 0xd6, 0x4f, 0x2e, 0x4a, 0x2c, 0xcf, 0x49, 0x2d, 0x2a, 0x48, 0x82, 0xb1,
	0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xd8, 0xa1, 0x5c, 0x25, 0x39, 0x2e, 0xae, 0x80, 0xa2,
	0xfc, 0x94, 0xd2, 0xe4, 0x92, 0xd0, 0xa2, 0x1c, 0x21, 0x01, 0x2e, 0xe6, 0xd2, 0xa2, 0x1c, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x10, 0x53, 0x29, 0x9f, 0x8b, 0x1b, 0x2a, 0xef, 0x99, 0x97,
	0x96, 0x2f, 0x24, 0xc4, 0xc5, 0x92, 0x97, 0x98, 0x9b, 0x0a, 0x55, 0x01, 0x66, 0x0b, 0x89, 0x70,
	0xb1, 0x66, 0xe6, 0x26, 0xa6, 0xa7, 0x4a, 0x30, 0x81, 0x05, 0x21, 0x1c, 0x90, 0x68, 0x41, 0x51,
	0x66, 0x72, 0xaa, 0x04, 0x33, 0x44, 0x14, 0xcc, 0x11, 0x52, 0xe0, 0xe2, 0x4e, 0x49, 0x2d, 0x4e,
	0x2e, 0xca, 0x2c, 0x28, 0xc9, 0xcc, 0xcf, 0x93, 0x60, 0x01, 0xcb, 0x21, 0x0b, 0x19, 0xb9, 0x71,
	0xf1, 0x39, 0x43, 0xdc, 0x16, 0x0c, 0xf1, 0x84, 0x90, 0x09, 0x17, 0x2b, 0x58, 0x44, 0x48, 0x58,
	0x0f, 0xe6, 0x09, 0x84, 0x93, 0xa5, 0x44, 0xd0, 0x05, 0x41, 0xee, 0x54, 0x62, 0x70, 0xe2, 0x8e,
	0xe2, 0x84, 0x7b, 0x3e, 0x89, 0x0d, 0xec, 0x6b, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb0,
	0xca, 0xe0, 0x9e, 0x19, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CrawlerServiceClient is the client API for CrawlerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CrawlerServiceClient interface {
	Crawl(ctx context.Context, in *ProductUrl, opts ...grpc.CallOption) (*ProductInfo, error)
}

type crawlerServiceClient struct {
	cc *grpc.ClientConn
}

func NewCrawlerServiceClient(cc *grpc.ClientConn) CrawlerServiceClient {
	return &crawlerServiceClient{cc}
}

func (c *crawlerServiceClient) Crawl(ctx context.Context, in *ProductUrl, opts ...grpc.CallOption) (*ProductInfo, error) {
	out := new(ProductInfo)
	err := c.cc.Invoke(ctx, "/crawler.CrawlerService/Crawl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CrawlerServiceServer is the server API for CrawlerService service.
type CrawlerServiceServer interface {
	Crawl(context.Context, *ProductUrl) (*ProductInfo, error)
}

// UnimplementedCrawlerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCrawlerServiceServer struct {
}

func (*UnimplementedCrawlerServiceServer) Crawl(ctx context.Context, req *ProductUrl) (*ProductInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Crawl not implemented")
}

func RegisterCrawlerServiceServer(s *grpc.Server, srv CrawlerServiceServer) {
	s.RegisterService(&_CrawlerService_serviceDesc, srv)
}

func _CrawlerService_Crawl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductUrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CrawlerServiceServer).Crawl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crawler.CrawlerService/Crawl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CrawlerServiceServer).Crawl(ctx, req.(*ProductUrl))
	}
	return interceptor(ctx, in, info, handler)
}

var _CrawlerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crawler.CrawlerService",
	HandlerType: (*CrawlerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Crawl",
			Handler:    _CrawlerService_Crawl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/crawlerpb/crawler.proto",
}
